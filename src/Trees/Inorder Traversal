import java.util.ArrayList;
import java.util.List;
import java.util.Stack;

 class TreeNode {
	      int val;
	      TreeNode left;
	      TreeNode right;
	      TreeNode() {}
	      TreeNode(int val) { this.val = val; }
	      TreeNode(int val, TreeNode left, TreeNode right) {
	          this.val = val;
	          this.left = left;
	          this.right = right;
	      }
	  }
public class InorderTraversal {
	public static List<Integer> inorderTraversal(TreeNode root) {
		   Stack<TreeNode> stack = new Stack<>();
		   List<Integer> r = new ArrayList<>();
		   while (true) {
		       while (root != null) {
		           stack.push(root);
		           root = root.left;
		       }
		       if (stack.isEmpty()) {
		           break;  // no node left
		       }
		       TreeNode node = stack.pop();
		       r.add(node.val);
		       root = node.right;
		   }
		   return r;
		}
}
